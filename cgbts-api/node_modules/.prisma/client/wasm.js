
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.16.1
 * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
 */
Prisma.prismaVersion = {
  client: "5.16.1",
  engine: "34ace0eb2704183d2c05b60b52fba5c43c13f303"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  userID: 'userID',
  username: 'username',
  password: 'password',
  email: 'email',
  phone_number: 'phone_number',
  first_name: 'first_name',
  middle_name: 'middle_name',
  last_name: 'last_name',
  date_of_birth: 'date_of_birth',
  address: 'address',
  telephone_number: 'telephone_number',
  create_at: 'create_at',
  updated_at: 'updated_at',
  status: 'status',
  isVerified: 'isVerified',
  last_login: 'last_login',
  workStartDate: 'workStartDate',
  suffix: 'suffix',
  sex: 'sex',
  barangay: 'barangay',
  city_municipal: 'city_municipal',
  postal_code: 'postal_code',
  country: 'country',
  province: 'province',
  sss_id: 'sss_id',
  pagibig_id: 'pagibig_id',
  philhealth_id: 'philhealth_id',
  tin: 'tin',
  nationality: 'nationality',
  civil_status: 'civil_status',
  placeof_birth: 'placeof_birth',
  role_Id: 'role_Id'
};

exports.Prisma.User_infoScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  middle_name: 'middle_name',
  last_name: 'last_name',
  suffix: 'suffix',
  DOB: 'DOB',
  relationship: 'relationship',
  contact_number: 'contact_number',
  users_id: 'users_id'
};

exports.Prisma.User_rolesScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  description: 'description'
};

exports.Prisma.ContributionsScalarFieldEnum = {
  contribution_id: 'contribution_id',
  amount: 'amount',
  post_date: 'post_date',
  status: 'status',
  userID: 'userID',
  agency_id: 'agency_id'
};

exports.Prisma.Agency_informationScalarFieldEnum = {
  agency_id: 'agency_id',
  agency_name: 'agency_name',
  description: 'description',
  contact_info: 'contact_info'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  notification_id: 'notification_id',
  message: 'message',
  is_read: 'is_read',
  created_at: 'created_at',
  user_id: 'user_id',
  Contribution_id: 'Contribution_id',
  agency_id: 'agency_id'
};

exports.Prisma.Benefit_claimsScalarFieldEnum = {
  claim_id: 'claim_id',
  claim_amount: 'claim_amount',
  claim_status: 'claim_status',
  submitted_at: 'submitted_at',
  processed_at: 'processed_at',
  remarks: 'remarks',
  userID: 'userID',
  agency_id: 'agency_id',
  btype_id: 'btype_id'
};

exports.Prisma.FaqScalarFieldEnum = {
  faq_id: 'faq_id',
  question: 'question',
  answer: 'answer',
  category_id: 'category_id'
};

exports.Prisma.Guides_tutorialsScalarFieldEnum = {
  guide_id: 'guide_id',
  title: 'title',
  content: 'content',
  category: 'category'
};

exports.Prisma.Benefits_typesScalarFieldEnum = {
  btypes_id: 'btypes_id',
  title: 'title',
  content: 'content',
  required_month: 'required_month',
  agency_id: 'agency_id'
};

exports.Prisma.Faqs_categoryScalarFieldEnum = {
  faq_cateforyId: 'faq_cateforyId',
  faq_categoryName: 'faq_categoryName'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Users: 'Users',
  user_info: 'user_info',
  user_roles: 'user_roles',
  contributions: 'contributions',
  agency_information: 'agency_information',
  notifications: 'notifications',
  benefit_claims: 'benefit_claims',
  faq: 'faq',
  guides_tutorials: 'guides_tutorials',
  benefits_types: 'benefits_types',
  faqs_category: 'faqs_category'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userID         Int             @id @default(autoincrement())
  username       String          @unique
  password       String
  email          String
  phone_number   String
  first_name     String
  middle_name    String
  last_name      String
  date_of_birth  DateTime
  address        String
  create_at      DateTime        @default(now())
  updated_at     DateTime?       @db.Timestamp(0)
  status         String
  last_login     DateTime?       @db.Timestamp(0)
  sex            String
  barangay       String
  city_municipal String
  postal_code    Int
  country        String
  province       String
  role_Id        Int             @default(1)
  contributions  contributions[]
  notifications  notifications[]
}

model user_roles {
  id          Int    @id @default(autoincrement())
  role_name   String
  description String
}

model contributions {
  contribution_id Int                @id @default(autoincrement())
  amount          Decimal
  post_date       DateTime
  status          String
  source          agency_information @relation(fields: [agency_id], references: [agency_id])
  user            Users              @relation(fields: [userID], references: [userID])
  userID          Int
  agency_id       Int
  notifications   notifications[]
}

model agency_information {
  agency_id     Int             @id @default(autoincrement())
  agency_name   String
  description   String
  contact_info  String
  contributions contributions[]
}

model notifications {
  notification_id Int           @id @default(autoincrement())
  message         String
  is_read         Int
  created_at      DateTime      @default(now())
  user            Users         @relation(fields: [user_id], references: [userID])
  contributions   contributions @relation(fields: [Contribution_id], references: [contribution_id])
  user_id         Int
  Contribution_id Int
}
